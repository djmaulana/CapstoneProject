# -*- coding: utf-8 -*-
"""CapstoneProject.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HUCwW_eFs6t8D-LZhcd8mav3yPkp5y0p

**DIDIT JOHAR MAULANA** - 
**DAI-005** - 
**TELKOM UNIVERSITY**

IMPORT LIBRARY
"""

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
import seaborn as sns
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split

"""READ DATASET FROM GDRIVE"""

url = 'https://drive.google.com/file/d/1RLRUvxvE2fahHs16cCYbHN_svOE9QKfm/view?usp=sharing' 
file_id=url.split('/')[-2]
dwn_url='https://drive.google.com/uc?id=' + '1RLRUvxvE2fahHs16cCYbHN_svOE9QKfm'
df = pd.read_csv(dwn_url)
df

"""DATA EXPLORATIONS"""

df.describe()

df.shape

dup_rows = df[df.duplicated()]
print('Number of duplicate', dup_rows.shape)

df.isnull().sum()/len(df)*100

"""DATA PREPARATIONS"""

df = df.drop(['id', 'date', 'zipcode', 'waterfront', 'view', 'yr_renovated', 'lat', 'long', 'sqft_lot', 'floors', 'sqft_living15', 'sqft_lot15', 'yr_renovated', 'sqft_basement', 'sqft_above'], axis=1)
df

#cek outlayer
for feature in df.columns:
  if df[feature].dtypes == 'object' or feature == 'id':
    pass
  else:
    df.boxplot(column=feature)
    plt.ylabel(feature)
    plt.title(feature)
    plt.show()

"""HANDLING OUTLIER"""

# calculate interquartile range
def interquartile(df,x):
  q1 = (df[x]).quantile(0.25)
  q3 = (df[x]).quantile(0.75) 
  iqr = q3 - q1 
  max = q3 + (1.5 *iqr)
  min = q1 - (1.5 *iqr)
  return max,min

#Replacing outliers
def replace_outliers(df,x,maximum,minimum):
  more_than = (df[x] > maximum)
  less_than = (df[x] < minimum)
  df[x] = df[x].mask(more_than, maximum,axis=0)
  df[x] = df[x].mask(less_than, minimum,axis=0)
  return df

maximum,minimum = interquartile(df,'price')
df = replace_outliers(df,'price',maximum,minimum)
boxplot = df.boxplot(column=['price'])

maximum,minimum = interquartile(df,'bedrooms')
df = replace_outliers(df,'bedrooms',maximum,minimum)
boxplot = df.boxplot(column=['bedrooms'])

maximum,minimum = interquartile(df,'bathrooms')
df = replace_outliers(df,'bathrooms',maximum,minimum)
boxplot = df.boxplot(column=['bathrooms'])

maximum,minimum = interquartile(df,'condition')
df = replace_outliers(df,'condition',maximum,minimum)
boxplot = df.boxplot(column=['condition'])

maximum,minimum = interquartile(df,'grade')
df = replace_outliers(df,'grade',maximum,minimum)
boxplot = df.boxplot(column=['grade'])

maximum,minimum = interquartile(df,'yr_built')
df = replace_outliers(df,'yr_built',maximum,minimum)
boxplot = df.boxplot(column=['yr_built'])

"""CORRELATIONS CHECK"""

corr = df.corr()
plt.figure(figsize=(12, 12))
sns.color_palette(as_cmap=True)
sns.heatmap(df.corr(), vmax=0.8, linewidths=0.01, square=True, annot=True)
plt.title('Korelasi antar Atribut', y=1, size=15)
plt.show()

"""LINEAR REGRESSION"""

x = df.drop(columns='price')
y = df['price']

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.3, random_state=4)

lin_reg = LinearRegression()

lin_reg.fit(x_train, y_train)

print(lin_reg.coef_)
print(lin_reg.intercept_)

lin_reg.score(x_test, y_test)

print(lin_reg.predict([[3, 2, 1680, 3, 8, 2001]]))

df.to_csv('FinalCapstone.csv', index = True)